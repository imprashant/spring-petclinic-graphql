version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.3.0
  aws-eks: circleci/aws-eks@1.0.2
  kubernetes: circleci/kubernetes@0.4.0
  helm: circleci/helm@1.0.0
executors:
  frontend-executor:
    docker:
      - image: cimg/node:14.10.1 # the primary container, where your job's commands are run
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
  backend-executor:
    docker:
      - image: circleci/openjdk:8u265-jdk-buster
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference

commands: # a reusable command with parameters
  tag-and-push-image:
    parameters:
      image-name:
        type: string
      image-tag:
        type: string
      repository-name:
        type: string
    steps:
      - aws-cli/setup:
          profile-name: hackathon-pmurkute
      - run:
          name: "AWS ECR Login"
          command: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 038062473746.dkr.ecr.us-east-1.amazonaws.com
      - run:
          name: "Create repository if doesn't exists"
          command: aws ecr describe-repositories --repository-names <<parameters.repository-name>> || aws ecr create-repository --repository-name <<parameters.repository-name>>
      - run:
          name: "Tag and push docker image"
          command: |
            docker tag <<parameters.image-name>>:<<parameters.image-tag>> 038062473746.dkr.ecr.us-east-1.amazonaws.com/<<parameters.repository-name>>:<<parameters.image-tag>>
            docker push 038062473746.dkr.ecr.us-east-1.amazonaws.com/<<parameters.repository-name>>:<<parameters.image-tag>>
jobs:
  build-frontend:
    executor: frontend-executor
    steps:
      - checkout # check out the code in the project directory
      - run:
          name: Building frontend
          command: |
            echo Building frontend
            cd frontend
            yarn install
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: "Build Docker image"
          command: docker build -t circleci-petclinic-frontend frontend/
#      - run:
#          name: "Docker image validation for frontend"
#          command: |
#            docker run -d --name circleci-petclinic-frontend circleci-petclinic-frontend
#            docker run --network container:circleci-petclinic-frontend appropriate/curl --retry 10 --retry-connrefused http://localhost:8080
      - tag-and-push-image:
          image-name: circleci-petclinic-frontend
          image-tag: latest
          repository-name: circleci-petclinic-frontend

  deploy-frontend:
    executor: aws-eks/python3
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: basic-cluster
          cluster-authentication-role-arn: arn:aws:iam::038062473746:role/CICDHackathon
      - helm/install-helm-on-cluster:
          enable-cluster-wide-admin-access: true
      - helm/install-helm-chart:
          chart: ./frontend/helm
          namespace: circle-ci
          release-name: circleci-petclinic-frontend

  build-backend:
    executor: backend-executor
    steps:
      - checkout # check out the code in the project directory
      - run:
          name: Building backend
          command: |
            cd backend
            ./mvnw clean package
      - setup_remote_docker:
          version: 19.03.13
      - run: docker build -t circleci-petclinic-backend backend/
#      - run:
#          name: "Docker image validation for backend"
#          command: |
#            docker run -d -p 8181:8080 --name circleci-petclinic-backend circleci-petclinic-backend
#            docker run --network container:circleci-petclinic-backend appropriate/curl --retry 10 --retry-connrefused http://localhost:8181
      - tag-and-push-image:
          image-name: circleci-petclinic-backend
          image-tag: latest
          repository-name: circleci-petclinic-backend

workflows:
  version: 2
  build-frontend-backend:
    jobs:
      - build-frontend
      - build-backend
      - deploy-frontend:
          requires:
            - build-frontend
